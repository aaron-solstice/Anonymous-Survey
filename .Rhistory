filter(grepl("coded", question_text)) %>%
mutate(item_count = stringr::str_count(answer, ","))
coded_oes <- data_long %>%
filter(grepl("coded", question_text))
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1)
max_responses
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
max(.$item_count)
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count
max_responses
View(coded_oes)
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>% View()
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count %>% max()
max_responses
coded_oes
to(m, 3)
to("m", 3)
paste0("m", 1:3)
coded_oes %>%
coded_oes %>%
separate(answer, into = paste0(a, 1:max_repsonses))
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count %>% max()
coded_oes %>%
separate(answer, into = paste0(a, 1:max_repsonses))
coded_oes %>%
separate(answer, into = paste0(a, 1:max_responses))
coded_oes <- data_long %>%
filter(grepl("coded", question_text))
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count %>% max()
coded_oes %>%
separate(answer, into = paste0(a, 1:max_responses))
paste0(a, 1:max_responses)
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses))
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses, collapse = ","))
?separate
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses, sep = ","))
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses), sep = ","))
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses), sep = ",")
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses), sep = ",|, ")
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses), sep = "(,|, )")
coded_oes %>%
separate(answer, into = paste0("a", 1:max_responses), sep = ",")
new_vars <- paste0("a", 1:max_responses)
coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(new_vars, answer)
?gather
new_vars
coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(!!new_vars, answer)
coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(new_vars, key = "n", value = "answer")
coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(new_vars, key = "n", value = "answer") %>%
View()
coded_oes_long <- coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(new_vars, key = "n", value = "answer")
coded_oes_long
coded_oes_long <- coded_oes %>%
separate(answer, into = new_vars, sep = ",") %>%
gather(new_vars, key = "n", value = "answer") %>%
mutate(answer= trimws(answer))
coded_oes_long %>% count(q_num, question_text, answer) %>%
group_by(q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup() %>%
mutate(question_text = str_replace(question_text, "coded. ", ""))
runApp()
runApp()
coded_oes_long
data_long
coded_oes
max_responses
coded_oes
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1)
max_responses
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count %>% max()
max_responses
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1) %>%
.$item_count %>% max(.)
max_responses
max_responses <- coded_oes %>%
mutate(item_count = stringr::str_count(answer, ",") + 1)
max_responses
max_responses %>% .$item_count
runApp()
runApp()
runApp()
1/36
runApp()
runApp()
runApp()
runApp()
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
n_respondents_gg
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
?infoBox
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
icon
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
?infoBox
?shiny::icon
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
enps
coltbl
coltbl
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
current_overall_gg
current_overall_answers
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
selected_overall_answers <- five_pt_dist_df %>% filter(wave_date %in%
input$wave_date_5p_dist)
selected_overall_answers
five_pt_dist_df
input$wave_date5p_dist
input$wave_date_5p_dist
five_pt_dist_df %>% filter(wave_date ==
input$wave_date_5p_dist)
five_pt_dist_df %>% filter(wave_date %in% c(
input$wave_date_5p_dist) )
five_pt_dist_df %>% filter(wave_date %in% as.character(
+                                input$wave_date_5p_dist) )
five_pt_dist_df %>% filter(wave_date %in% as.character(
+                                input$wave_date_5p_dist) )
as.character(input$wave_date_5p_dist)
five_pt_dist_df$wave_date
Q
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
selected_overall_answers <- five_pt_dist_df %>% filter(as.character(wave_date) %in%
input$wave_date_5p_dist)
selected_overall_answers
selected_overall_gg <- ggplot(selected_overall_answers,
aes(y = n, x = answer, color = wave_date)) + geom_col() +
geom_text(aes(label = n), nudge_y = n/2) + geom_text(aes(label = percent_l),
nudge_y = 350) + labs(x = "Response Category (5 pt scale)",
y = "Count/Percent") + ggtitle(paste0("Distribution of Scores")) +
theme_tufte()
selected_overall_gg <- ggplot(selected_overall_answers,
aes(y = n, x = answer, color = wave_date)) + geom_col() +
geom_text(aes(label = n), nudge_y = -100) + geom_text(aes(label = percent_l),
nudge_y = 350) + labs(x = "Response Category (5 pt scale)",
y = "Count/Percent") + ggtitle(paste0("Distribution of Scores")) +
theme_tufte()
selected_overall_gg <- ggplot(selected_overall_answers,
aes(y = n, x = answer, color = wave_date)) + geom_col() +
geom_text(aes(label = n)) + geom_text(aes(label = percent_l),
nudge_y = 350) + labs(x = "Response Category (5 pt scale)",
y = "Count/Percent") + ggtitle(paste0("Distribution of Scores")) +
theme_tufte()
selected_overall_gg
runApp()
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
?selected_overall_gg <- ggplot(selected_overall_answers,
aes(y = n, x = answer, color = wave_date)) + geom_col() +
geom_text(aes(label = n), nudge_y - 10) + geom_text(aes(label = percent_l),
nudge_y = 350) + labs(x = "Response Category (5 pt scale)",
y = "Count/Percent") + ggtitle(paste0("Distribution of Scores")) +
theme_tufte()
?geom_text
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
perform_categories
perform_categories <- bound_data %>%
filter(table_name == "group_level_summary") %>%
unnest()
perform_categories
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
perform_categories$wave_date
categories_table_current_kable <- perform_categories %>%
filter(as.character(wave_date) %in% perform_categories$wave_date) %>%
select(wave_date, Grouping, `Average Score` = aggregate_average_score) %>%
mutate(`Average Score` = round(`Average Score`, 2)) %>%
spread(wave_date, `Average Score`)
categories_table_current_kable
categories_table_current_kable <- perform_categories %>%
filter(as.character(wave_date) %in% as.character(perform_categories$wave_date) ) %>%
select(wave_date, Grouping, `Average Score` = aggregate_average_score) %>%
mutate(`Average Score` = round(`Average Score`, 2)) %>%
spread(wave_date, `Average Score`)
categories_table_current_kable
max(perform_categories$wave_date))
max(perform_categories$wave_date)
categories_table_current_kable <- perform_categories %>%
filter(as.character(wave_date) %in% as.character(perform_categories$wave_date) ) %>%
select(wave_date, Grouping, `Average Score` = aggregate_average_score) %>%
mutate(`Average Score` = round(`Average Score`, 2)) %>%
spread(wave_date, `Average Score`) %>%
arrange(desc(!!sym(as.character(max(perform_categories$wave_date)))))
categories_table_current_kable
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
d
d_cut <- d%>%
mutate(answer_cut = cut(avg_answer, breaks = seq(1,5, by = .25), labels = seq(1.25, 5, by  = .25 )) ) %>%
count(wave_date, answer_cut) %>%
group_by(wave_date) %>%
mutate(p = n/sum(n)) %>%
ungroup()
d_cut
dist_across_respondents_5pt <- d %>%
ggplot(aes(x = avg_answer, group = wave_date, fill = as.factor(wave_date)) ) +
geom_density(kernel = "gaussian", alpha = .5) +
coord_cartesian(xlim = c(1,5)) +
labs(x = "Average Answer", y = "Response Density", fill = "Wave") +
theme_tufte()
dist_across_respondents_5pt
dist_across_respondents_5pt_hist <- d_cut %>%
ggplot(aes(y = p, x = answer_cut, group = wave_date, fill = as.factor(wave_date)) ) +
geom_col(position = "dodge") +
coord_cartesian(ylim = c(0,1)) +
labs(x = "Average Answer", y = "Percent of Scores", fill = "Wave") +
scale_x_discrete(drop=FALSE) +
theme_tufte()
dist_across_respondents_5pt_hist
d_cut <- d%>%
mutate(answer_cut = cut(avg_answer, breaks = seq(1,5, by = .25), labels = seq(1.25, 5, by  = .25 )) ) %>%
count(wave_date, answer_cut) %>%
group_by(wave_date) %>%
mutate(p = n/sum(n)) %>%
ungroup() %>%
select(-n) %>%
spread(answer_cut, p)
d_cut
d_cut <- d%>%
mutate(answer_cut = cut(avg_answer, breaks = seq(1,5, by = .25), labels = seq(1.25, 5, by  = .25 )) ) %>%
count(wave_date, answer_cut) %>%
group_by(wave_date) %>%
mutate(p = n/sum(n)) %>%
ungroup() %>%
select(-n) %>%
spread(answer_cut, p, fill = 0) %>%
gather(answer_cut, p, -wave_date)
d_cut
dist_across_respondents_5pt_hist <- d_cut %>%
ggplot(aes(y = p, x = answer_cut, group = wave_date, fill = as.factor(wave_date)) ) +
geom_col(position = "dodge") +
coord_cartesian(ylim = c(0,1)) +
labs(x = "Average Answer", y = "Percent of Scores", fill = "Wave") +
scale_x_discrete(drop=FALSE) +
theme_tufte()
dist_across_respondents_5pt_hist
dist_across_respondents_5pt_hist_current
#distribution of average scores (across respondents)
dist_across_respondents_5pt_hist <-  bound_data %>%
filter(table_name == "avg_respondent_5_pt") %>%
unnest()
dist_across_respondents_5pt_hist_cut <- dist_across_respondents_5pt_hist %>%
mutate(answer_cut = cut(avg_answer, breaks = seq(1,5, by = .25), labels = seq(1.25, 5, by  = .25 )) ) %>%
count(wave_date, answer_cut) %>%
group_by(wave_date) %>%
mutate(p = n/sum(n)) %>%
ungroup() %>%
select(-n) %>%
spread(answer_cut, p, fill = 0) %>%
gather(answer_cut, p, -wave_date)
dist_across_respondents_5pt_hist_cut
dist_across_respondents_5pt_hist <- dist_across_respondents_5pt_hist_cut %>%
ggplot(aes(y = p, x = answer_cut, group = wave_date, fill = as.factor(wave_date)) ) +
geom_col(position = "dodge") +
coord_cartesian(ylim = c(0,1)) +
labs(x = "Average Answer", y = "Percent of Scores", fill = "Wave") +
scale_x_discrete(drop=FALSE) +
theme_tufte()
dist_across_respondents_5pt_hist
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
dist_across_respondents_5pt_hist_cut
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
runApp('/Volumes/GoogleDrive/My Drive/R Projects/anonymous_survey')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
h4
?h4
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
by_question_distribution
runApp()
by_question_distribution
runApp()
runApp()
by_question_distribution_gg
by_question_distribution
wave_dates
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates, question_text == input$question_text_str) %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(input$wave_date_ind_questions,":", input$question_text_str), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution
by_question_distribution_gg <- by_question_distribution %>%
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates, question_text == "My co-workers are committed to doing quality work.") %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(input$wave_date_ind_questions,":", input$question_text_str), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates, question_text == "My co-workers are committed to doing quality work.") %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(wave_dates,":", "My co-workers are committed to doing quality work."), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution_gg
by_question_distribution
by_question_distribution %>%
filter(as.character(wave_date) == "2019-03-18")
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates, question_text == "My co-workers are committed to doing quality work.") %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(wave_dates,":", "My co-workers are committed to doing quality work."), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution_gg
wave_dates
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates[[2]], question_text == "My co-workers are committed to doing quality work.") %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(wave_dates,":", "My co-workers are committed to doing quality work."), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution_gg
runApp()
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates, question_text == "My co-workers are committed to doing quality work.")
by_question_distribution_gg
by_question_distribution
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) %in% wave_dates)
by_question_distribution_gg
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) == max(wave_dates) )
by_question_distribution_gg
by_question_distribution_gg <- by_question_distribution %>%
filter(as.character(wave_date) == min(wave_dates) )
by_question_distribution_gg
by_question_distribution_gg <- by_question_distribution %>%
filter(question_text == "My co-workers are committed to doing quality work.") %>%
ggplot(aes(x = answer, y = p, fill = as.character(wave_date) ) ) +
labs(title = paste0(wave_dates,":", "My co-workers are committed to doing quality work."), y = "Percent", fill = "Dates Selected") +
geom_col(position = "dodge") +
scale_x_discrete(drop=FALSE) +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels = scales::percent) +
theme_tufte()
by_question_distribution_gg
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer)
by_question_distribution
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n))
by_question_distribution
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup()  %>%
select(-n)
by_question_distribution
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup()  %>%
select(-n) %>%
spread(answer, p)
by_question_distribution
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup()  %>%
select(-n) %>%
spread(answer, p, fill = 0)
by_question_distribution
1:5
glue::backtick(1:5)
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup()  %>%
select(-n) %>%
spread(answer, p, fill = 0) %>%
gather(key = "answer", value = "p", glue::backtick(1:5)) %>%
mutate(question_text = factor(question_text, ordered = T, levels =avg_question_score_current$question_text ),
answer = factor(answer))
by_question_distribution <- bound_data %>%
filter(table_name == "five_pt_scale_data") %>%
unnest() %>%
count(wave_date, q_num, question_text, answer) %>%
group_by(wave_date, q_num, question_text) %>%
mutate(p = n/sum(n)) %>%
ungroup()  %>%
select(-n) %>%
spread(answer, p, fill = 0) %>%
gather(key = "answer", value = "p", as.character(1:5)) %>%
mutate(question_text = factor(question_text, ordered = T, levels =avg_question_score_current$question_text ),
answer = factor(answer))
by_question_distribution
runApp()
